{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CAACf,KAAKkB,EAAML,SAAS,SAExC,CAACpB,IAGAqB,EDViBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QACb,OACI,oCACI,4BAAKpB,GACJoB,GAAW,uBAAGJ,UAAU,mBAAb,WACZ,yBAAKA,UAAU,6BACVT,EAAKE,KAAI,SAACC,GAAD,OACN,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEQnCkB,EAnBK,WAChB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACKS,EAAWe,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCVlD6B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.630fa34c.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputVal=(e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>0){\n            setCategories(categories=>[inputValue,...categories]);\n            setInputValue('');\n        }\n        \n        \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputVal}\n            />\n        </form>\n    )\n}\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired,\n\n}","export const getGifs = async (category)=>{\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jVSyt0vaRRDByyFw0Ay11MRQomsNsmNn`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n    const gifs = data.map(img=>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n   \n    return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React/*,{useEffect, useState}*/ from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n       \n    const {data, loading} = useFetchGifs(category);\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__fadeIn\">Loading</p>}\n            <div className=\"card-grid animate__fadeIn\">\n                {data.map((img)=>\n                    <GifGridItem key={img.id} {...img} />\n                    )}     \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category)=>{\n    const [state, setstate] = useState({\n        data:[],\n        loading: true,\n    });\n    \n    useEffect(()=>{\n        getGifs(category)\n            .then(imgs=>{\n                    setstate({data:imgs, loading: false})            \n            })\n        },[category]); \n\n\n    return state;\n}","import React,{useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nconst GifExpertApp= ()=>{\n    const [categories, setCategories] = useState(['Boxing']);\n    \n    return(\n      <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr/>\n        \n        <ol>\n            {categories.map(category=>\n                <GifGrid key={category} category={category}/>\n            )}\n        </ol>\n      </>\n    );\n    \n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}